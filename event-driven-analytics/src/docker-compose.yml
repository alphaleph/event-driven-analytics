version: "2"

networks:
   app-tier:
       driver: bridge

services:
    # postgres:
    #     image: postgres
    #     restart: always
    #     ports: "5432:5432"
    #     environment:
    #         POSTGRES_PASSWORD: secret
    zookeeper:
        image: docker.io/bitnami/zookeeper:3.8
        networks:
            - app-tier
        ports:
            - "2181:2181"
        volumes:
            - "zookeeper_data:/bitnami"
        environment:
            - ALLOW_ANONYMOUS_LOGIN=yes
            - CHANGE_ME=yes
    kafka:
        image: docker.io/bitnami/kafka:3.2
        networks:
            - app-tier
        ports:
            - "9092:9092"
        volumes:
            - "kafka_data:/bitnami"
        environment:
            ##KRaft Settings
            #- KAFKA_CFG_NODE_ID=0
            #- KAFKA_CFG_PROCESS_ROLES=controller,broker
            #- KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
            #Listeners
            #- KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
            #- KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
            #- KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
            #- KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
            #- KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
            # Use ZK for now
            - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
            - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
            - ALLOW_PLAINTEXT_LISTENER=yes
            - KAFKA_OTHER_CONFIG=later
        depends_on:
            - zookeeper
    # my-app:
    #    image: 'APP_IMAGE'
    #    networks:
    #        - app-tier
volumes:
    zookeeper_data:
        driver: local
    kafka_data:
        driver: local

